package springBootTest2.service.emplib;

import java.io.File;
import java.util.UUID;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Service;
import org.springframework.ui.Model;
import org.springframework.web.multipart.MultipartFile;

import springBootTest2.command.EmpLibCommand;
import springBootTest2.domain.AuthInfo;
import springBootTest2.domain.EmpLibDTO;
import springBootTest2.mapper.EmpLibMapper;

@Component
@Service
public class EmpLibUpdateService {
	@Autowired
	EmpLibMapper emplibMapper;

	public void execute(EmpLibCommand emplibCommand, HttpSession session, Model model) {
		EmpLibDTO  dto = new EmpLibDTO();
		dto.setLibNum(emplibCommand.getLibNum());
		dto.setLibWriter(emplibCommand.getLibWriter());
		dto.setLibSubject(emplibCommand.getLibSubject());
		dto.setLibContent(emplibCommand.getLibContent());
		
		emplibMapper.emplibUpdate(dto);
		String path = "redirect:libInfo?num=" + emplibCommand.getLibNum();
		AuthInfo authInfo = (AuthInfo) session.getAttribute("authInfo");
		EmpLibDTO dto = emplibMapper.selectOne(emplibCommand.getLibNum());
		
		String[] fileNames = null;
		if(dto.getStoreFileName() != null) {
			fileNames = dto.getStoreFileName().split("`");
		}
		
		String filePath = "/view/lib";
		String fileDir = session.getServletContext().getRealPath(filePath);
		
		String originalTotal = "";
		String storeTotal = "";
		String fileSizeTotal = "";
		
		if (!dto.getLibPw().equals(emplibCommand.getLibPw()) || !dto.getMemId().equals(authInfo.getUserId())) {
			model.addAttribute("dto", emplibCommand);
			model.addAttribute("err_pw", "비밀번호가 틀리거나 게시글 작성자가 아닙니다.");
			path = "thymeleaf/lib/libModify";
		}else {
			dto.setLibContent(emplibCommand.getLibContent());
			dto.setLibNum(Integer.parseInt(emplibCommand.getLibNum()));
			dto.setLibSubject(emplibCommand.getLibSubject());
			dto.setLibWriter(emplibCommand.getLibWriter());
			if(dto.getOriginalFileName() != null) {
				originalTotal = dto.getOriginalFileName();
				storeTotal = dto.getStoreFileName();
				fileSizeTotal = dto.getFileSize();
			}

			///////////////////////여기서부터
			if (!emplibCommand.getReport()[0].getOriginalFilename().isEmpty()) {
				originalTotal = "";
				storeTotal = "";
				fileSizeTotal = "";
				for (MultipartFile mf : emplibCommand.getReport()) {
					String originalFile = mf.getOriginalFilename();
					String extension = originalFile.substring(originalFile.lastIndexOf(".")); // 마지막 . 이 있는 index부터 가져온
					String storeName = UUID.randomUUID().toString().replace("-", "");
					String storeFileName = storeName + extension;
					String fileSize = Long.toString(mf.getSize());

					File file = null;
					file = new File(fileDir + "/" + storeFileName);
					try {
						mf.transferTo(file);
					} catch (Exception e) {
					}
					originalTotal += originalFile + "`";
					storeTotal += storeFileName + "`";
					fileSizeTotal += fileSize + "`";
				}
			}
			////////////////////////////여기까지 
			//파일이 등록되어 있을때만 실행 -> 파일 이름, 크기 받아와서 주르륵 수정
			
			
			dto.setFileSize(fileSizeTotal);
			dto.setOriginalFileName(originalTotal);
			dto.setStoreFileName(storeTotal);
			Integer i = emplibMapper.emplibUpdate(dto);
			// 파일삭제
			if (i > 0) {
				File file = null;
				try {
					for (String fileName : fileNames) {
						file = new File(fileDir + "/" + fileName);
						if (file.exists()) file.delete();
					}
				} catch (Exception e) {}
			}
		}
		return path;
	}

	
}