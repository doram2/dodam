package springBootTest2.controller;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import springBootTest2.command.GoodsCommand;
import springBootTest2.service.goods.GoodsDeleteService;
import springBootTest2.service.goods.GoodsDetailService;
import springBootTest2.service.goods.GoodsListService;
import springBootTest2.service.goods.GoodsNumberService;
import springBootTest2.service.goods.GoodsUpdateService;
import springBootTest2.service.goods.GoodsWriteService;
import springBootTest2.service.library.FileDownLoadService;

@Controller
@RequestMapping("goods")
public class GoodsController {
	@Autowired
	GoodsNumberService goodsNumberService;
	@Autowired
	GoodsListService goodsListService;
	@Autowired
	GoodsWriteService goodsWriteService;
	@Autowired
	GoodsDetailService goodsDetailService;
	@Autowired
	GoodsDeleteService goodsDeleteService;
	@Autowired
	GoodsUpdateService goodsUpdateService;
	@Autowired
	FileDownLoadService fileDownLoadService;
	
	@RequestMapping("fileDown")
	public void fileDown(@RequestParam("sfile") String sfile, @RequestParam("ofile") String ofile,
				HttpServletRequest request, HttpServletResponse response) { //다운만 받고 페이지 안 여니까 void
		fileDownLoadService.execute(sfile, ofile, request, response);
	}
	
	@RequestMapping("goodsUpdate")
	public String goodsUpdateOk(GoodsCommand goodsCommand) {
		goodsUpdateService.execute(goodsCommand);
		return "redirect:goodsInfo?num="+goodsCommand.getGoodsNum();
	}
	
	@RequestMapping("goodsModify")
	public String goodsUpdate(@RequestParam(value="num") String goodsNum, Model model) {
		goodsDetailService.execute(goodsNum, model);
		return "thymeleaf/goods/goodsUpdate";
	}
	
	@RequestMapping("goodsDelete")
	public String goodsDelete(@RequestParam(value="num") String goodsNum) {
		goodsDeleteService.execute(goodsNum);
		return "redirect:goodsList";
	}
	
	@RequestMapping("goodsDetail")
	public String goodsDetail(@RequestParam(value="num") String goodsNum, Model model) {
		goodsDetailService.execute(goodsNum, model);
		return "thymeleaf/goods/goodsInfo";
	}
	
	@RequestMapping(value = "goodsRegist", method = RequestMethod.POST)
	public String goodsRegist(GoodsCommand goodsCommand, HttpSession session) {
		goodsWriteService.execute(goodsCommand , session);
		return "redirect:goodsList";
	}
	
	@RequestMapping("goodsList")
	public String goodsList(Model model) {
		goodsListService.execute(model);
		return "thymeleaf/goods/goodsList";
	}
	
	@RequestMapping("goodsWrite")
	public String goodsWrite(Model model, HttpSession session) {
		goodsNumberService.execute(model, session);
		return "thymeleaf/goods/goodsForm";
	}
}
