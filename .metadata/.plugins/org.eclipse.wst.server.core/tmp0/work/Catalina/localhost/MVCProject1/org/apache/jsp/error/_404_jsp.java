/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.56
 * Generated at: 2022-01-10 07:20:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.error;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class _404_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("<title>네이버 :: 페이지를 찾을 수 없습니다.</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"http://www.naver.com/dist/css/err_170424.css?1017\" />\r\n");
      out.write("<script type=text/javascript>\r\n");
      out.write("var defaultCharset = document.charset ;\r\n");
      out.write("function isIE(){ return /msie/i.test(navigator.userAgent) && !/opera/i.test(navigator.userAgent); }\r\n");
      out.write("function setDefaultCharset() { document.charset = defaultCharset ; }\r\n");
      out.write("function emulAcceptCharset(form) { if (isIE) { var defCharset = document.charset ; document.charset = form.acceptCharset ; window.onbeforeunload = setDefaultCharset ; } return true; }\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<style>\r\n");
      out.write("a { cursor: pointer; }\r\n");
      out.write("</style>\r\n");
      out.write("<div id=\"wrap\">\r\n");
      out.write("<div id=\"header\">\r\n");
      out.write("<h1><a href=\"http://www.naver.com/\"><img src=\"https://s.pstatic.net/static/w8/err/lg_naver.gif\" alt=\"NAVER\" width=\"145\" height=\"33\" /></a></h1>\r\n");
      out.write("<p class=\"menu\"><a href=\"http://www.naver.com/\">네이버홈</a> | <a onclick=\"window.open('https://help.naver.com/support/alias/contents2/naverhome/notfound.naver', 'help_naver', 'left=40,top=60,width=650,height=800,toolbar=1,resizable=0'); return false;\">네이버 고객센터</a></p>\r\n");
      out.write("</div>\r\n");
      out.write("<div id=\"container\">\r\n");
      out.write("<h2>죄송합니다.<br />요청하신 페이지를 찾을 수 없습니다.</h2>\r\n");
      out.write("<div class=\"content\">\r\n");
      out.write("<p>방문하시려는 페이지의 주소가 잘못 입력되었거나,<br />페이지의 주소가 변경 혹은 삭제되어 요청하신 페이지를 찾을 수 없습니다.</p>\r\n");
      out.write("<p>입력하신 주소가 정확한지 다시 한번 확인해 주시기 바랍니다.</p>\r\n");
      out.write("<p>관련 문의사항은 <a onclick=\"window.open('https://help.naver.com/support/alias/contents2/naverhome/notfound.naver', 'help_naver', 'left=40,top=60,width=650,height=800,toolbar=1,resizable=0'); return false;\">네이버 고객센터</a>에 알려주시면 친절하게 안내해 드리겠습니다.</p>\r\n");
      out.write("<p>감사합니다.</p>\r\n");
      out.write("</div>\r\n");
      out.write("<form class=\"search\" style=\"margin-top:50px;\" name=\"search\" action=\"http://search.naver.com/search.naver\" method=\"get\" onsubmit=\"emulAcceptCharset(this);\" accept-charset=\"ks_c_5601-1987\">\r\n");
      out.write("<input type=\"hidden\" name=\"sm\" value=\"nnf_hty\">\r\n");
      out.write("<fieldset class=\"window02\">\r\n");
      out.write("<legend>검색</legend>\r\n");
      out.write("<input type=\"text\" title=\"검색\" name=\"query\" maxlength=\"255\" value=\"\" class=\"box_window\" accesskey=\"s\">\r\n");
      out.write("<input src=\"https://s.pstatic.net/static/w8/err/btn_sch.gif\" onmouseover=\"this.src='https://s.pstatic.net/static/w8/err/btn_sch_over.gif'\" onmouseout=\"this.src='https://s.pstatic.net/static/w8/err/btn_sch.gif'\" alt=\"검색\" type=\"image\" class=\"btn_window\">\r\n");
      out.write("</fieldset>\r\n");
      out.write("<p class=\"sch_desc\">네이버 검색으로 원하시는 페이지를 찾으실 수 있습니다.</p>\r\n");
      out.write("</form>\r\n");
      out.write("</div>\r\n");
      out.write("<div id=\"footer\">\r\n");
      out.write("<address>\r\n");
      out.write("<a href=\"https://www.naver.com/\" target=\"_blank\" class=\"logo\"><img src=\"https://s.pstatic.net/static/common/footer/logo_naver.gif\" width=\"63\" height=\"15\" alt=\"NAVER\"></a>\r\n");
      out.write("<em>Copyright &copy;</em>\r\n");
      out.write("<a href=\"https://www.navercorp.com/\" target=\"_blank\">NAVER Corp.</a>\r\n");
      out.write("<span>All Rights Reserved.</span>\r\n");
      out.write("</address>\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
